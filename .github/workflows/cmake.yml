name: CMake

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  BUILD_TYPE: Release
  PRODUCT_NAME: demo-plugin

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Create x64 Build Environment
      working-directory: ${{ github.workspace }}
      run: cmake -B x64 -A x64 -DBUILD_DEMO_PLUGIN=On -DCOPY_DIR=${{ github.workspace }}

    - name: Build x64
      working-directory: ${{ github.workspace }}
      shell: cmd
      run: |
        cmake --build x64 --config ${{ env.BUILD_TYPE }}
        Ren "${{ env.PRODUCT_NAME }}.vst3" "${{ env.PRODUCT_NAME }}_x64.vst3"
        
    # - name: Test With Pluginval
    #   working-directory: ${{ github.workspace }}
    #   shell: cmd
    #   run: |
    #     powershell -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest https://github.com/Tracktion/pluginval/releases/download/latest_release/pluginval_Windows.zip -OutFile pluginval.zip"
    #     powershell -Command "Expand-Archive pluginval.zip -DestinationPath ."
    #     pluginval.exe --validate-in-process --validate "${{ env.PRODUCT_NAME }}_x64.vst3" --strictness-level 10 --verbose
    #     if %ERRORLEVEL% neq 0 exit /b 1

    # - name: Create Win32 Build Environment
    #   working-directory: ${{ github.workspace }}
    #   run: cmake -B Win32 -A Win32 -DBUILD_DEMO_PLUGIN=On -DCOPY_DIR=${{ github.workspace }}
      
    # - name: Build Win32
    #   working-directory: ${{ github.workspace }}
    #   shell: cmd
    #   run: |
    #     cmake --build Win32 --config ${{ env.BUILD_TYPE }}
    #     Ren "${{ env.PRODUCT_NAME }}.vst3" "${{ env.PRODUCT_NAME }}_Win32.vst3"

    - name: Prepare ZIP file
      working-directory: ${{ github.workspace }}
      shell: pwsh
      id: prep_zip
      run: |
        $version = Get-Content -Path ./${{ env.PRODUCT_NAME }}/version.txt -Raw
        $major,$minor = $version.split('.')
        $runid = "${{ github.run_id }}"

        Write-Host "::set-output name=VERSION_MAJOR::$($major)"
        Write-Host "::set-output name=VERSION_MINOR::$($minor)"
        Write-Host "::set-output name=VERSION_RUNID::$($runid)"

        $dir = "${{ env.PRODUCT_NAME }}_$($major).$($minor).$($runid)"
        New-Item -Path "./" -Name "$($dir)" -ItemType directory

        Get-ChildItem -Filter "*.vst3" | Move-Item -Destination "./$($dir)"
        Compress-Archive "./$($dir)" "./$($dir).zip"

        Get-ChildItem

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: ${{ github.workspace }}/${{ steps.prep_zip.PRODUCT_NAME }}_${{ steps.prep_zip.VERSION_MAJOR }}.${{ steps.prep_zip.VERSION_MINOR }}.${{ steps.prep_zip.VERSION_RUNID }}.zip
